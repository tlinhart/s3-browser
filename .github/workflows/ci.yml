name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read
  id-token: write
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ["14", "16", "18"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Update to latest npm
        run: npm install -g npm@latest
      - name: Install dependencies
        run: npm ci --include=dev
      - name: Lint with ESLint
        run: npm run lint
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ["14", "16", "18"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Update to latest npm
        run: npm install -g npm@latest
      - name: Install dependencies
        run: npm ci --include=dev
      - name: Run tests with Jest
        run: npm run test
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      BUCKET_NAME: www.example.com
    strategy:
      fail-fast: false
      matrix:
        node-version: ["14", "16", "18"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Update to latest npm
        run: npm install -g npm@latest
      - name: Install dependencies
        run: npm ci --include=dev
      - name: Build with webpack
        run: npm run build
  demo:
    name: Deploy demo
    needs: [lint, test, build]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm
      - name: Update to latest npm
        run: npm install -g npm@latest
      - name: Install dependencies
        run: npm ci
        working-directory: demo
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-central-1
      - name: Create or update stack resources
        uses: pulumi/actions@v4
        with:
          command: up
          refresh: true
          stack-name: s3-browser-demo-prod
          work-dir: demo
          cloud-url: s3://pulumi.linhart.tech
